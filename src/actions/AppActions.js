'use strict';

var AppDispatcher = require('../dispatchers/AppDispatcher');
var Promise = require('bluebird');



var asyncFn = function (randomTime) {
  return new Promise(function (resolve, reject) {
    setTimeout(function () {
      resolve('Success!');
    },randomTime);
  });
}



var AppActions = {


  loadBigData: function(dataToGet){
    console.log('action');

    AppDispatcher.handleClientAction({
      actionType: 'START_LOAD',
      data: null
    });
    
    //promise map through the results
    //once each done update
    //once all done emit end
    Promise.try(function(){
      return dataToGet.slice(0);
    })
    .mapSeries(function (datum, index) {
      var randomTime = Math.floor( Math.random()*2000 );
      return asyncFn(randomTime)
      .then(function (reply) {
        AppDispatcher.handleClientAction({
          actionType: 'EMIT_LOAD',
          data: dataToGet.length
        });
      });
    })
    .then(function (dataReturned) {
      AppDispatcher.handleClientAction({
        actionType: 'END_LOAD',
        data: dataReturned//whater generated by async call than needed by client
      });
    });

  }

};

module.exports = AppActions;